services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile

    ports:
      - '5173:5173'

    develop:
      watch:
        - path: ./package.json
          action: rebuild
        - path: ./package-lock.json
          action: rebuild
        - path: .
          target: /app
          action: sync

  server:
    build:
      context: ./server
      dockerfile: Dockerfile

    restart: always

    ports:
      - "8000:8000"

    depends_on:
      mysql:
        condition: service_healthy

    networks:
      - app-network

  mysql:
    image: mysql
    restart: always

    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_TCP_PORT: ${MYSQL_TCP_PORT}

    env_file:
      - .env

    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', 'localhost' ]
      timeout: 20s
      retries: 10

    volumes:
      - mysql_data:/var/lib/mysql

    networks:
      - app-network

    ports:
      - "3307:3307"

volumes:
  mysql_data:


networks:
  app-network:
    driver: bridge
